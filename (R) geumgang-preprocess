rm(list=ls())
setwd("C:/Users/cho/Desktop/Rcode/geumgang") ##저장위치 지정##
library(dplyr)

file2<-read.csv("gongju_2017.csv",header=T)
file3<-read.csv("buyeo_2017.csv",header=T)
calender<-read.csv("calender.csv",header=T) #Nov.15

data_gongju <-left_join(calender,file2,by="date")
data_buyeo<-left_join(calender,file3,by="date")


######################################################################################################################

seqlen<-7
num_var<-9
day<-length(data_gongju[,1])
data<- data_gongju[,3:11]

data<-apply(t(data), 1, function(x)(x-min(x,na.rm=TRUE))/(max(x,na.rm=TRUE)-min(x,na.rm=TRUE))) #Min-Max Normalization
data_seq <- data.frame((matrix(nrow=(day-seqlen-7),ncol=seqlen*num_var)))

data[is.na(data)]<- (-1)  ## MISSING VALUE

for(i in 1:(day-seqlen-7)){
  for(j in 1:seqlen){
    data_seq[i,((j-1)*9+1):(j*9)] <- data[i+j-1,]
  }}

tseq_gongju<- data_seq
rownames(tseq_gongju)<-data_gongju[1:(day-seqlen-7),1]

######################################################################################################################

seqlen<-7
num_var<-8
day<-length(data_buyeo[,1])

data<- data_buyeo[,3:10]

data<-apply(t(data), 1, function(x)(x-min(x,na.rm=TRUE))/(max(x,na.rm=TRUE)-min(x,na.rm=TRUE))) #Min-Max Normalization
data_seq <- data.frame((matrix(nrow=(day-seqlen-7),ncol=seqlen*num_var+7)))

data_var <- data[,1:7]            ## MISSING VALUE
data_var[is.na(data_var)]<- (-1)  ## MISSING VALUE
data[,1:7]<-data_var              ## MISSING VALUE

for(i in 1:(day-seqlen-7)){
  for(j in 1:seqlen){
    data_seq[i,((j-1)*8+1):(j*8)] <- data[i+j-1,]}
    data_seq[i,57] =  data[i+7,8]
    data_seq[i,58] =  data[i+8,8]
    data_seq[i,59] =  data[i+9,8]
    data_seq[i,60] =  data[i+10,8] 
    data_seq[i,61] =  data[i+11,8]
    data_seq[i,62] =  data[i+12,8]
    data_seq[i,63] =  data[i+13,8]
  }

tseq_buyeo<- data_seq
rownames(tseq_buyeo)<-data_buyeo[1:(day-seqlen-7),1]


######################################################################################################################

library(imputeTS)
radi<-read.csv("radiation.csv",header=T)
temp<-read.csv("temperature.csv",header=T)
weather<-left_join(calender,radi,by="date")
weather<-left_join(weather,temp,by="date")
weather<-weather[,-1]
weather[,1]=na.interpolation(weather[,1],option="linear")
weather[,2]=na.interpolation(weather[,2],option="linear")
weather[,3]=na.interpolation(weather[,3],option="linear")
weather<-apply(t(weather), 1, function(x)(x-min(x,na.rm=TRUE))/(max(x,na.rm=TRUE)-min(x,na.rm=TRUE))) #Min-Max Normalization

seqlen= 7
num_var= 3
day<-1690
data_seq <- data.frame((matrix(nrow=(day-seqlen-7),ncol=seqlen*num_var)))

for(i in 1:(day-seqlen-7)){
  for(j in 1:seqlen){
    data_seq[i,((j-1)*3+1):(j*3)] <- weather[i+j-1,]
  }}

tseq_weather<- data_seq

######################################################################################################
#### remove NaN Values ###############
tseq_all <- cbind (tseq_gongju,tseq_buyeo,tseq_weather)
tseq_all<-na.omit(tseq_all)

tseq_gongju <- tseq_all[,1:63]
tseq_buyeo <- tseq_all[,64:119]
tseq_target <- tseq_all[,120:126]
tseq_weather <- tseq_all[,127:147]


max(data_buyeo[,10],na.rm=TRUE)
min(data_buyeo[,10],na.rm=TRUE)
rm(list=c("calender","file2","file3","data_seq","data","data_var","data_buyeo","data_gongju","radi","temp"))

#write.csv(tseq_gongju,"tseq_gongju.csv", row.names = FALSE, col.names=FALSE)
#write.csv(tseq_buyeo,"tseq_buyeo.csv", row.names = FALSE, col.names=FALSE)
#write.csv(tseq_target,"tseq_target.csv", row.names = FALSE, col.names=FALSE)
#write.csv(tseq_weather,"tseq_weather.csv", row.names = FALSE, col.names=FALSE)

write.csv(tseq_all,"tseq_all.csv", row.names = FALSE)





##############################################################
## PACF test for time lagging
#library(forecast)
#Ccf(data_gongju[,9], data_buyeo[,10], lag.max = NULL, type = "correlation",
#    plot = TRUE, na.action = na.contiguous)

